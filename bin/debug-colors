#!/usr/bin/env ruby

BLACK = "\x1b[30m".freeze
GREEN = "\x1b[32m".freeze
WHITE = "\x1b[37m".freeze
RESET = "\x1b[0m".freeze

def num(n)
  n.to_s.rjust(3)
end

def print_num(n)
  print " #{num n} "
end

def section(prefix, suffix, params = %w[n])
  par_str = params.join(';')
  puts "#{WHITE}#{prefix}#{GREEN}<#{par_str}>#{WHITE}#{suffix}#{RESET}"
  yield
  print "\n\n"
end

# -----------------------------------------------------------------------------

print "\n"

section '\e[', 'm' do
  [0, 1, 2, 3, 4, 7, 8].each do |n|
    print "\x1b[#{n}m"
    print_num n
    print RESET
  end

  print "\n"
  (30..37).each do |n|
    print "\x1b[#{n}m"
    print_num n
    print RESET
  end

  print "\n"
  (40..47).each do |n|
    print BLACK + "\x1b[#{n}m"
    print_num n
    print RESET
  end
end

section '\e[1;', 'm' do
  (30..37).each do |n|
    print "\x1b[1;#{n}m"
    print_num n
    print RESET
  end
end

section '\e[2;', 'm' do
  (30..37).each do |n|
    print "\x1b[2;#{n}m"
    print_num n
    print RESET
  end
end

section '\e[38;5;', 'm' do
  (0..255).each do |n|
    print "\n" if n > 0 && n < 16 && (n % 8).zero?
    print "\n" if n >= 16 && ((n - 16) % 24).zero?
    print "\x1b[38;5;#{n}m"
    print_num n
    print RESET
  end
end

section '\e[48;5;', 'm' do
  (0..255).each do |n|
    print "\n" if n > 0 && n < 16 && (n % 8).zero?
    print "\n" if n >= 16 && ((n - 16) % 24).zero?
    print BLACK + "\x1b[48;5;#{n}m"
    print_num n
    print RESET
  end
end
