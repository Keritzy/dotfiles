#!/usr/bin/env ruby
# frozen_string_literal: true

require 'set'
require_relative '../lib/helper.rb'

unless macos?
  put_error 'This script must be run in macOS.'
  exit(false)
end

def udefs(namespace, key, type_flag, val)
  ['defaults', 'write', namespace, key, type_flag, val]
end

def generate_commands
  commands = []
  kill = Set.new

  prompt_yn('Disable the dashboard?') do |v|
    if v
      commands << udefs('com.apple.dashboard', 'mcx-disabled', '-bool', 'YES')
      kill << 'Dashboard'
    end
  end
  prompt_yn('Disable window animations?') do |v|
    if v
      commands << udefs('NSGlobalDomain', 'NSAutomaticWindowAnimationsEnabled', '-bool', 'NO')
    end
  end
  prompt_yn('Dock: Fade out hidden app icons?') do |v|
    if v
      commands << udefs('com.apple.dock', 'showhidden', '-bool', 'YES')
      kill << 'Dock'
    end
  end
  prompt_yn('Finder: Show the ~/Library folder?') do |show|
    commands << ['chflags', show ? 'nohidden' : 'hidden',
                 File.expand_path('~/Library')]
    kill << 'Finder'
  end

  kill.each { |app| commands << ['killall', app] }
  commands
end

def main
  put_status 'Customising'
  commands = generate_commands

  put_status 'Confirming'
  commands.each { |args| puts "Run: #{PINK}#{args.shelljoin}#{OFF}" }
  prompt_yn('Apply this configuration?') do |apply|
    return false unless apply
  end

  put_status 'Applying configuration'
  commands.each do |args|
    run_command(args)
  end
  true
end

exit(main) if $PROGRAM_NAME == __FILE__
